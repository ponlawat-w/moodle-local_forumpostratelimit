{"version":3,"file":"view.min.js","sources":["../src/view.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * JavaScript interjector for forum view page\n *\n * @module      local/forumpostratelimit\n * @copyright   2025 Ponlawat Weerapanpisit <ponlawat_w@outlook.co.th>\n * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\n/**\n * Disable input elements for posting a new post in a forum view page.\n * @param {string} message Display message\n */\nexport const disableforumview = message => {\n    const form = document.getElementById('mformforum');\n    if (!form) {\n        return;\n    }\n    const elements = form.querySelectorAll('input, textarea, button');\n    for (const element of elements) {\n        element.disabled = true;\n    }\n    const editor = form.querySelector('[data-fieldtype=editor]');\n    if (editor) {\n        editor.innerHTML = `<div style=\"display: none;\">${editor.innerHTML}</div>`\n            + `<p class=\"text-danger\">${message}</p>`;\n    }\n};\n\n/**\n * Disable input elements for posting a new post in a forum discussion page.\n * @param {string} message Display message\n */\nexport const disableforumdiscuss = message => {\n    const disableforms = () => {\n        const forms = document.querySelectorAll('[data-content=inpage-reply-form]');\n        for (const form of forms) {\n            const elements = form.querySelectorAll('input, textarea, button');\n            for (const element of elements) {\n                element.disabled = true;\n            }\n            const textarea = form.querySelector('textarea');\n            if (textarea) {\n                textarea.value = message;\n                textarea.classList.add('text-danger');\n            }\n        }\n    };\n    document.addEventListener('click', e => {\n        /** @type {{ target: HTMLAnchorElement }} */\n        const { target } = e;\n        if (target.attributes.getNamedItem('data-action')?.value === 'collapsible-link') {\n            setInterval(disableforms, 500);\n        }\n    });\n};\n"],"names":["message","form","document","getElementById","elements","querySelectorAll","element","disabled","editor","querySelector","innerHTML","disableforms","forms","textarea","value","classList","add","addEventListener","e","target","attributes","getNamedItem","setInterval"],"mappings":"uNA2BgCA,gBACtBC,KAAOC,SAASC,eAAe,kBAChCF,kBAGCG,SAAWH,KAAKI,iBAAiB,+BAClC,MAAMC,WAAWF,SAClBE,QAAQC,UAAW,QAEjBC,OAASP,KAAKQ,cAAc,2BAC9BD,SACAA,OAAOE,UAAY,sCAA+BF,OAAOE,qDACzBV,+CAQLA,gBACzBW,aAAe,WACXC,MAAQV,SAASG,iBAAiB,wCACnC,MAAMJ,QAAQW,MAAO,OAChBR,SAAWH,KAAKI,iBAAiB,+BAClC,MAAMC,WAAWF,SAClBE,QAAQC,UAAW,QAEjBM,SAAWZ,KAAKQ,cAAc,YAChCI,WACAA,SAASC,MAAQd,QACjBa,SAASE,UAAUC,IAAI,kBAInCd,SAASe,iBAAiB,SAASC,oCAEzBC,OAAEA,QAAWD,EAC0C,oDAAzDC,OAAOC,WAAWC,aAAa,6EAAgBP,QAC/CQ,YAAYX,aAAc"}